import { useState, useEffect } from 'react'

const localCache = {}

export default function useBreedList(animal) {
    const [breedList, setBreedList] = useState([])
    const [status, setStatus] = useState('unloaded')

    useEffect(() => {
        if (!animal) {
            setBreedList([])
        } else if (localCache[animal]) {
            setBreedList(localCache[animal])
        } else {
            requestBreedList()
        }

        async function requestBreedList() {
            setBreedList([])
            setStatus('Loading')

            const response = await fetch(
                `http://pets-v2.dev-apis.com/breeds?animal=${animal}`,
            )
            const json = await response.json()
            localCache[animal] = json.breeds || []
            setBreedList(localCache[animal])
            setStatus('Loaded')
        }
    }, [animal])

    return [breedList, status]
}



----------------------------

    useEffect(() => {
        requestPets()
    }, []) // eslint-disable-line react-hooks/exhaustive-deps

    async function requestPets() {
        const response = await fetch(
            `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`,
        )
        const json = await response.json()
        setPets(json.pets)
    }

-----------------------------